dnl -*- sh -*-
dnl the "configure" script is made from this by running GNU "autoconf"
dnl
dnl
dnl Configuration script for Xd640.
dnl

dnl Make sure we have the template for the makefile...
AC_INIT(Makedefs.in)
AC_CONFIG_HEADER(config.h)

dnl What OS?
uname=`uname`
if test "$uname" = "IRIX64"; then
    uname="IRIX"
fi


dnl Checks for programs...
AC_PROG_CC
AC_PROG_CXX
AC_PROG_RANLIB
AC_PATH_PROG(AR,ar)
AC_PATH_PROG(RM,rm)
AC_PATH_PROG(XGETTEXT, xgettext)
AC_PATH_PROG(FETCHMAIL, fetchmail)

LIBNAME="libxd640.a"
if test "$RANLIB" != ":"; then
  LIBCOMMAND="ar cr"
else
  LIBCOMMAND="ar crs"
fi
DSOCOMMAND="echo"
DSONAME=""

dnl Check for libraries...
LIBS="-lm $LIBS"
AC_PATH_X
AC_PATH_XTRA
if test "$x_libraries" = "/usr/lib"; then
	echo "Ignoring X library directory \"$x_libraries\" requested by configure."
	x_libraries="NONE"
fi
if test ! "$x_libraries" = "NONE" -a ! "$x_libraries" = ""; then
	LDFLAGS="$LDFLAGS -L$x_libraries"
	if test "$uname" = "SunOS"; then
		LDFLAGS="$LDFLAGS -R$x_libraries"
	fi
fi
if test "$x_includes" = "/usr/include"; then
	echo "Ignoring X include directory \"$x_includes\" requested by configure."
	x_includes="NONE"
fi
if test ! "$x_includes" = "NONE" -a ! "$x_includes" = ""; then
	CFLAGS="$CFLAGS -I$x_includes"
	CXXFLAGS="$CXXFLAGS -I$x_includes"
fi
AC_CHECK_LIB(socket,socket,
if test "$uname" != "IRIX"; then
	LIBS="-lsocket $LIBS"
else
	echo "Not using -lsocket since you are running IRIX."
fi)
AC_CHECK_LIB(nsl,gethostbyaddr,
if test "$uname" != "IRIX"; then
	LIBS="-lnsl $LIBS"
else
	echo "Not using -lnsl since you are running IRIX."
fi)

ft2p=`freetype-config --cflags`
CFLAGS="$CFLAGS $ft2p"
CXXFLAGS="$CXXFLAGS $ft2p"

AC_CHECK_LIB(freetype, FT_Outline_Decompose,
        AC_DEFINE(HAVE_FREETYPE)
        LIBS="$LIBS -lfreetype")

AC_CHECK_HEADER(jpeglib.h,
    AC_CHECK_LIB(jpeg, jpeg_destroy_decompress,
        AC_DEFINE(HAVE_LIBJPEG)
        LIBS="$LIBS -ljpeg"))

AC_CHECK_HEADER(zlib.h,
    AC_CHECK_LIB(z, gzopen,
        AC_DEFINE(HAVE_LIBZ)
        LIBS="$LIBS -lz"))

AC_CHECK_HEADER(png.h, AC_DEFINE(HAVE_PNG_H))
AC_CHECK_HEADER(libpng/png.h, AC_DEFINE(HAVE_LIBPNG_PNG_H))

if test x$ac_cv_header_png_h = xyes -o x$ac_cv_header_libpng_png_h = xyes; then
    AC_CHECK_LIB(png, png_read_rows,
        AC_DEFINE(HAVE_LIBPNG)
        LIBS="-lpng $LIBS"
    )
fi

AC_SUBST(GLLIB)

AC_CHECK_LIB(crypto, CRYPTO_add_lock)
AC_CHECK_LIB(ssl, SSL_connect)
AC_CHECK_LIB(curl, curl_easy_setopt)

HAVE_LIB_CURL=
if test "$ac_cv_lib_curl_curl_easy_setopt" = "yes"; then
	HAVE_LIB_CURL=1
fi
AC_SUBST(HAVE_LIB_CURL)

if test -n "$GCC"; then
    AC_MSG_CHECKING(if libsupc++ is required)

    SUPC="`$CXX -print-file-name=libsupc++.a 2>/dev/null`"
    case "$SUPC" in
        libsupc++.a*)
            # Library not found, so this is and older GCC...
            AC_MSG_RESULT(no)
            ;;
        *)
            # This is gcc 3.x, and it knows of libsupc++, so we need it
            LIBS="$LIBS -lsupc++"
            AC_MSG_RESULT(yes)
            ;;
    esac
fi
LIBS="-lXutf8 -lXtst -lX11 $LIBS $GLLIB"
CFLAGS="$CFLAGS -I/usr/local/include"
CXXFLAGS="$CXXFLAGS -I/usr/local/include"
LDFLAGS="$LDFLAGS -L/usr/local/lib"

AC_CHECK_LIB(m,pow)
AC_CHECK_LIB(fltk-utf8, XUtf8Tolower)

FLTK=
HAVE_FLTK_UTF=
AC_CHECK_LIB(fltk-utf8, fl_utflen, FLTK="-lfltk-utf8" HAVE_FLTK_UTF=1 , )
if test "x$FLTK" == "x"; then
	AC_CHECK_LIB(fltk, numericsort, FLTK="-lfltk" LIBS="-lfltk $LIBS", )
else
	LIBS="-lfltk-utf8_images $FLTK $LIBS"
fi
if test "x$FLTK" == "x"; then
	echo " "
	echo "you must install fltk-utf8 before compiling Xd640."
	exit 1
fi

AC_SUBST(HAVE_FLTK_UTF)
XD="-lxd640"
LIBS="-lxd640 $LIBS"
LDFLAGS="$LDFLAGS -L../lib"
CFLAGS="$CFLAGS -I.. -I../xd640"
CXXFLAGS="$CXXFLAGS -fPIC -I.. -I../xd640"
DSONAME="libxd640.so.1"
DSOCOMMAND="\$(CXX) -Wl,-soname,libxd640.so.1 -I../include \$(LDLIBS) -shared $DEBUGFLAG -o"

dnl add warnings to compiler switches:
dnl do this last so messing with switches does not break tests
if test -n "$GCC"; then
    CFLAGS="-Wall -Wunused -fno-rtti $CFLAGS"
    CXXFLAGS="-Wall -Wunused -Wno-return-type -fno-rtti $CXXFLAGS"

    # See if GCC supports -fno-exceptions...
    echo "Testing if GCC supports -fno-exceptions..."
    OLDCFLAGS="$CFLAGS"
    CFLAGS="$CFLAGS -fno-exceptions"
    AC_TRY_COMPILE(,,
	CXXFLAGS="$CXXFLAGS -fno-exceptions"
	echo "...",
	CFLAGS="$OLDCFLAGS"
	echo "GCC does not support exceptions...")

    # See if we are running Solaris; if so, try the -fpermissive option...
    if test $uname = SunOS; then
	echo "Testing if GCC supports -fpermissive..."

	OLDCFLAGS="$CFLAGS"
	CFLAGS="$CFLAGS -fpermissive"
	AC_TRY_COMPILE(,,
	    CXXFLAGS="$CXXFLAGS -fpermissive"
	    echo "Enabling -fpermissive to work around X header bugs...",
	    CFLAGS="$OLDCFLAGS"
	    echo "The -fpermissive option is not required by your GCC...")
    fi
fi

dnl Output the makefile and configuration file...
AC_SUBST(DSONAME)
AC_SUBST(DSOCOMMAND)
AC_SUBST(LIBNAME)
AC_SUBST(LIBCOMMAND)
AC_SUBST(MAKEDEPEND)

AC_OUTPUT(Makedefs)

dnl
dnl End of configure script.
dnl
