# data file for the Fltk User Interface Designer (fluid)
version 1.0100 
header_name {.h} 
code_name {.cxx} 
gridx 5 
gridy 5 
snap 3
Function {make_function_panel()} {open
} {
  Fl_Window function_panel {
    label {function/method} open
    xywh {774 432 285 170} resizable modal visible
  } {
    Fl_Light_Button f_public_button {
      label public
      tooltip {Make the function or method publicly accessible.} xywh {10 10 65 25} labelsize 10 when 0
    }
    Fl_Light_Button f_c_button {
      label {C declaration}
      tooltip {Declare with a C interface instead of C++.} xywh {80 10 90 25} labelsize 10
    }
    Fl_Input f_name_input {
      label {Name(args): (blank for main())}
      tooltip {The name of the function or method.} xywh {10 55 265 25} labelsize 12 align 5 when 0 textfont 4 resizable
    }
    Fl_Input f_return_type_input {
      label {Return Type: (blank to return outermost widget)}
      tooltip {The return type of the function or method.} xywh {10 100 265 25} labelsize 12 align 5 when 0 textfont 4
    }
    Fl_Return_Button f_panel_ok {
      label OK
      tooltip {Apply the changes.} xywh {110 135 80 25} hotspot
    }
    Fl_Button f_panel_cancel {
      label Cancel
      tooltip {Cancel the changes.} xywh {195 135 80 25} shortcut 0xff1b
    }
  }
} 

Function {make_code_panel()} {open
} {
  Fl_Window code_panel {
    label code open
    xywh {260 242 548 175} resizable modal visible
  } {
    Fl_Input code_input {
      tooltip {C/C++ code.} xywh {10 10 525 120} type Multiline labelsize 12 align 0 when 0 textfont 4 resizable
    }
    Fl_Return_Button code_panel_ok {
      label OK
      xywh {370 140 80 25} hotspot
    }
    Fl_Button code_panel_cancel {
      label Cancel
      xywh {455 140 80 25} shortcut 0xff1b
    }
  }
} 

Function {make_codeblock_panel()} {open
} {
  Fl_Window codeblock_panel {
    label codeblock open
    xywh {289 462 295 130} resizable modal visible
  } {
    Fl_Input code_before_input {
      tooltip {\#ifdef or similar conditional code block.} xywh {10 10 275 25} labelsize 12 align 5 when 0 textfont 4 resizable
    }
    Fl_Box {} {
      label {"{...child code...}" is inserted here}
      xywh {10 35 270 25} align 20
    }
    Fl_Input code_after_input {
      tooltip {\#endif or similar conditional code block.} xywh {10 60 275 25} labelsize 12 align 5 when 0 textfont 4
    }
    Fl_Return_Button codeblock_panel_ok {
      label OK
      xywh {120 95 80 25} hotspot
    }
    Fl_Button codeblock_panel_cancel {
      label Cancel
      xywh {205 95 80 25} shortcut 0xff1b
    }
  }
} 

Function {make_declblock_panel()} {open
} {
  Fl_Window declblock_panel {
    label {declaration block} open
    xywh {184 572 295 130} resizable modal visible
  } {
    Fl_Input decl_before_input {
      tooltip {\#ifdef or similar conditional declaration block.} xywh {10 10 275 25} labelsize 12 align 5 when 0 textfont 4 resizable
    }
    Fl_Box {} {
      label {"\\n...child code...\\n" is inserted here}
      xywh {10 35 275 25} align 20
    }
    Fl_Input decl_after_input {
      tooltip {\#endif or similar declaration code block.} xywh {10 60 275 25} labelsize 12 align 5 when 0 textfont 4
    }
    Fl_Return_Button declblock_panel_ok {
      label OK
      xywh {120 95 80 25} hotspot
    }
    Fl_Button declblock_panel_cancel {
      label Cancel
      xywh {205 95 80 25} shortcut 0xff1b
    }
  }
} 

Function {make_decl_panel()} {open
} {
  Fl_Window decl_panel {
    label declaration open
    xywh {393 601 290 180} resizable visible
  } {
    Fl_Light_Button decl_public_button {
      label public
      tooltip {Make the declaration publicly accessible.} xywh {10 10 65 25} labelsize 10 when 0
    }
    Fl_Input decl_input {
      label {Can be any declaration, like "int x;", an external symbol like "extern int foo();", a \#directive like "\#include <foo.h>", a comment like "//foo" or "/*foo*/", or typedef like "typedef char byte;" or "using std::list;".} selected
      tooltip {Declaration text.} xywh {10 40 270 25} labelsize 12 align 134 when 0 textfont 4 resizable
    }
    Fl_Return_Button decl_panel_ok {
      label OK
      xywh {115 145 80 25} hotspot
    }
    Fl_Button decl_panel_cancel {
      label Cancel
      xywh {200 145 80 25} shortcut 0xff1b
    }
  }
} 

Function {make_class_panel()} {open
} {
  Fl_Window class_panel {
    label class open
    xywh {517 813 285 170} resizable modal visible
  } {
    Fl_Light_Button c_public_button {
      label public
      tooltip {Make the class publicly accessible.} xywh {10 10 65 25} labelsize 10 when 0
    }
    Fl_Input c_name_input {
      label {Name:}
      tooltip {Name of class.} xywh {10 55 265 25} labelsize 12 align 5 when 0 textfont 4 resizable
    }
    Fl_Input c_subclass_input {
      label {Subclass of (text between : and \{)}
      tooltip {Name of subclass.} xywh {10 100 265 25} labelsize 12 align 5 when 0 textfont 4
    }
    Fl_Return_Button c_panel_ok {
      label OK
      xywh {110 135 80 25} hotspot
    }
    Fl_Button c_panel_cancel {
      label Cancel
      xywh {195 135 80 25} shortcut 0xff1b
    }
  }
} 
